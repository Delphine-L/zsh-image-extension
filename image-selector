# -*- mode: shell-script -*-
# vim: ft=zsh fdm=marker :

                                                                     # find out where sxiv is located:
IMAGE_SELECTOR_SXIV=$HOME/.zsh-image-selector/sxiv                   # - default path
[ -x "$IMAGE_SELECTOR_SXIV" ] || IMAGE_SELECTOR_SXIV="${0:h}/sxiv"   # - directory with this plugin
[ -x "$IMAGE_SELECTOR_SXIV" ] || IMAGE_SELECTOR_SXIV="${0:A:h}/sxiv" # - directory with this plugin with symlinks resolved
[ -x "$IMAGE_SELECTOR_SXIV" ] || IMAGE_SELECTOR_SXIV=sxiv            # - give up and use the global sxiv
if [ ! -x "$IMAGE_SELECTOR_SXIV" ] &&                                # - sxiv not found
   [ -z "$commands[sxiv]" ]; then
    echo 'ERROR: sxiv not found in $PATH' 1>&2
    return 1
fi

W3MIMGDISPLAY=/usr/lib/w3m/w3mimgdisplay
if [ -x "$W3MIMGDISPLAY" ]; then
    image-preview()
    {
        autoload -U split-shell-arguments

        # local variables for split-shell-arguments
        local reply REPLY REPLY2

        local ARG

        ((--CURSOR))
        split-shell-arguments
        ((++CURSOR))

        ARG=$(eval echo $reply[$REPLY]) # evaluate tilde etc.

        echo -e "2;3;\n0;1;0;200;0;0;0;0;0;0;${ARG}\n4;\n3;" | $W3MIMGDISPLAY &> /dev/null
        read -s -k
        zle clear-screen
    }
    zle -N image-preview
    bindkey '^X^O' image-preview
fi

image-selector()
{
    autoload -U modify-current-argument
    autoload -U split-shell-arguments

    # local variables for split-shell-arguments
    local reply REPLY REPLY2

    local ARG
    local PREFIX

    ((--CURSOR))
    split-shell-arguments
    ((++CURSOR))

    ARG=$(eval echo $reply[$REPLY]) # evaluate tilde etc.

    # read the file prefix
    PREFIX=.
    [ -n "$ARG" ] && PREFIX=${ARG%%/#}

    # if it is a directory, use its contents; also, corner case
    [ -d "$PREFIX" ] || [ "$ARG" = "/" ] && PREFIX=${PREFIX}/

    local FILES
    FILES=(${PREFIX}*(-.N))
    [ -z "$FILES" ] && return

    local OLDIFS=$IFS
    local IFS="
"
    FILES=($($IMAGE_SELECTOR_SXIV -t -o $FILES 2> /dev/null | sort | uniq))
    IFS=$OLDIFS
    [ -z "$FILES" ] && return

    # quote the metacharacters
    FILES=$FILES:q

    if [ -n "$ARG" ]; then
        modify-current-argument '$FILES'
    else
        LBUFFER="${LBUFFER%% #} $FILES"
    fi
}
zle -N image-selector
bindkey ${IMAGE_SELECTOR_KEY:-'^X^I'} image-selector
